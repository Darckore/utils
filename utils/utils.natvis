<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <Type Name="utils::ratio&lt;*&gt;">
    <DisplayString Condition="m_sign &lt; 0">-({m_num}/{m_den})</DisplayString>
    <DisplayString Condition="m_sign &gt; 0">({m_num}/{m_den})</DisplayString>
    <DisplayString Condition="m_sign == 0">0</DisplayString>
  </Type>

  <Type Name="utils::string_pool">
    <DisplayString>string pool</DisplayString>
    <Expand>
      <Item Name="[data]">m_data</Item>
      <Item Name="[buf">m_buffer</Item>
    </Expand>
  </Type>

  <Type Name="utils::prefixed_pool::index">
    <DisplayString>pool index ({m_idx})</DisplayString>
    <Expand>
      <Item Name="[pool]">m_pool</Item>
      <Item Name="[index]">m_idx</Item>
    </Expand>
  </Type>

  <Type Name="utils::prefixed_pool::idx_pair">
    <DisplayString>index pair</DisplayString>
    <Expand>
      <Item Name="[saved]">m_saved</Item>
      <Item Name="[current]">m_cur</Item>
    </Expand>
  </Type>
  
  <Type Name="utils::prefixed_pool">
    <DisplayString>prefixed string pool</DisplayString>
    <Expand>
      <Item Name="[data]">m_pools</Item>
    </Expand>
  </Type>

  <Type Name="utils::hashed_string">
    <DisplayString>hashed string: {m_hash,Xb}</DisplayString>
  </Type>

  <Type Name="utils::colour">
    <DisplayString>colour: {m_val,Xb}</DisplayString>
    <Expand>
      <Item Name="[R]">(char)(0xFF &amp; m_val),Xb</Item>
      <Item Name="[G]">(char)(((0xFF &lt;&lt; 8) &amp; m_val) &gt;&gt; 8),Xb</Item>
      <Item Name="[B]">(char)(((0xFF &lt;&lt; 16) &amp; m_val) &gt;&gt; 16),Xb</Item>
      <Item Name="[A]">(char)(((0xFF &lt;&lt; 24) &amp; m_val) &gt;&gt; 24),Xb</Item>
    </Expand>
  </Type>

  <Type Name="utils::vector&lt;*&gt;">
    <DisplayString>vector{dimensions}</DisplayString>
    <Expand>
      <Item Name="[x]" Condition="dimensions > 0">m_coords._Elems[0]</Item>
      <Item Name="[y]" Condition="dimensions > 1">m_coords._Elems[1]</Item>
      <Item Name="[z]" Condition="dimensions > 2">m_coords._Elems[2]</Item>
      <Item Name="[coords]">m_coords</Item>
    </Expand>
  </Type>

  <Type Name="utils::matrix&lt;*&gt;">
    <DisplayString>matrix{width}x{height}</DisplayString>
    <Expand>
      <Item Name="[rows]">m_data</Item>
    </Expand>
  </Type>

  <Type Name="utils::multiple_it&lt;*&gt;">
    <DisplayString>multi-iter</DisplayString>
    <Expand>
      <Item Name="[iterators]">m_iters</Item>
    </Expand>
  </Type>

  <Type Name="utils::detail::iterator_pair&lt;*&gt;">
    <DisplayString>iterator pair</DisplayString>
    <Expand>
      <Item Name="[begin]">m_beg</Item>
      <Item Name="[end]">m_end</Item>
    </Expand>
  </Type>

  <Type Name="utils::value_guard&lt;*&gt;">
    <DisplayString>value guard ({m_old})</DisplayString>
    <Expand>
      <Item Name="[original]">m_old</Item>
      <Item Name="[current]">m_ref</Item>
    </Expand>
  </Type>

  <Type Name="utils::clock&lt;*&gt;">
    <DisplayString>clock</DisplayString>
    <Expand>
      <Item Name="[mark]">m_mark</Item>
    </Expand>
  </Type>

  <Type Name="utils::ilist_node&lt;*&gt;">
    <DisplayString>node</DisplayString>
    <Expand>
      <Item Name="[list]" Condition="m_list">*m_list</Item>
      <Item Name="[list]" Condition="!m_list">"&lt;detached&gt;",sb</Item>
      <Item Name="[prev]" Condition="m_prev">*m_prev</Item>
      <Item Name="[prev]" Condition="!m_prev">"null",sb</Item>
      <Item Name="[next]" Condition="m_next">*m_next</Item>
      <Item Name="[next]" Condition="!m_next">"null",sb</Item>
    </Expand>
  </Type>

  <Type Name="utils::ilist_fwd_iter&lt;*&gt;">
    <DisplayString Condition="m_node">fwd iterator</DisplayString>
    <DisplayString Condition="!m_node">fwd iterator (end)</DisplayString>
    <Expand>
      <Item Name="[node]" Condition="m_node">*m_node</Item>
    </Expand>
  </Type>

  <Type Name="utils::ilist_rev_iter&lt;*&gt;">
    <DisplayString Condition="m_node">rev iterator</DisplayString>
    <DisplayString Condition="!m_node">rev iterator (end)</DisplayString>
    <Expand>
      <Item Name="[node]" Condition="m_node">*m_node</Item>
    </Expand>
  </Type>
  
  <Type Name="utils::ilist&lt;*&gt;">
    <DisplayString Condition="m_size">intrusive list ({m_size})</DisplayString>
    <DisplayString Condition="!m_size">intrusive list (empty)</DisplayString>
    <Expand>
      <Item Name="[size]">m_size</Item>
      <Item Name="[head]" Condition="m_head">*m_head</Item>
      <Item Name="[head]" Condition="!m_head">"null",sb</Item>
      <CustomListItems Condition="m_size">
        <Variable Name="cur" InitialValue="m_head"/>
        <Variable Name="count" InitialValue="0"/>
        <Loop Condition="cur">
          <If Condition="count &amp;&amp; count &lt; m_size - 1">
            <Item Name="[{count}]">*cur</Item>
          </If>
          <Exec>cur = cur->m_next</Exec>
          <Exec>++count</Exec>
          <If Condition="cur &amp;&amp; count &gt; 20">
            <Item Name="[...]">"&lt;limit reached&gt;",sb</Item>
            <Break/>
          </If>
        </Loop>
      </CustomListItems>
      <Item Name="[tail]" Condition="m_tail">*m_tail</Item>
      <Item Name="[tail]" Condition="!m_tail">"null",sb</Item>
      <Item Name="[allocator]">m_alloc</Item>
    </Expand>
  </Type>

  <Type Name="utils::ilist_view&lt;*&gt;">
    <DisplayString Condition="m_size &amp;&amp; !reverse">list view ({m_size})</DisplayString>
    <DisplayString Condition="!m_size &amp;&amp; !reverse">list view (empty)</DisplayString>
    <DisplayString Condition="m_size &amp;&amp; reverse">rev view ({m_size})</DisplayString>
    <DisplayString Condition="!m_size &amp;&amp; reverse">rev view (empty)</DisplayString>
    <Expand>
      <Item Name="[size]">m_size</Item>
      <Item Name="[head]" Condition="m_head.m_node">*m_head.m_node</Item>
      <Item Name="[head]" Condition="!m_head.m_node">"null",sb</Item>
      <Item Name="[tail]" Condition="m_tail.m_node">*m_tail.m_node</Item>
      <Item Name="[tail]" Condition="!m_tail.m_node">"null",sb</Item>
    </Expand>
  </Type>

</AutoVisualizer>
